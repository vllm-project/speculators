[tox]
min_version = 4.0
env_list = py3{9,10,11,12,13}


[testenv]
description = Run all tests
deps =
    .[dev]
commands =
    pytest tests/ {posargs}


[testenv:test-unit]
description = Run unit tests
deps =
    .[dev]
commands =
    python -m pytest tests/unit {posargs}


[testenv:test-integration]
description = Run integration tests
deps =
    .[dev]
commands =
    python -m pytest tests/integration {posargs}


[testenv:test-e2e]
description = Run end-to-end tests
deps =
    .[dev]
passenv =
    HF_HOME
    HF_TOKEN
    VLLM_PYTHON
commands =
    python -m pytest tests/e2e {posargs}


[testenv:quality]
description = Run all quality checks
deps =
    .[dev]
commands =
    ruff check
    python -m mdformat --check README.md DEVELOPING.md CONTRIBUTING.md CODE_OF_CONDUCT.md src/ tests/

[testenv:style]
description = Run style checks and fixes
deps =
    .[dev]
commands =
    ruff format
    ruff check --fix
    python -m mdformat README.md DEVELOPING.md CONTRIBUTING.md CODE_OF_CONDUCT.md src/ tests/


[testenv:types]
description = Run type checks
deps =
    .[dev]
commands =
    mypy --check-untyped-defs


[testenv:build]
description = Build the project
deps =
    build
    setuptools
    setuptools-git-versioning
setenv =
    SPECULATORS_BUILD_TYPE = {env:SPECULATORS_BUILD_TYPE:dev}
    SPECULATORS_BUILD_ITERATION = {env:SPECULATORS_BUILD_ITERATION:}
commands =
    python -m build


[testenv:clean]
description = Clean up build, dist, and cache files
skip_install = true
deps =
commands =
    rm -rf build
    rm -rf dist
    rm -rf *.egg-info
    find . -type f -name "*.pyc" -delete
    find . -type d -name "__pycache__" -exec rm -r {} +
    rm -rf .mypy_cache
    rm -rf .pytest_cache
    rm -rf .tox
    rm -rf .ruff_cache
    rm -rf .coverage
