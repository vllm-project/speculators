name: Development

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install tox
      - name: Run quality checks
        run: tox -e quality

  type-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install tox
      - name: Run quality checks
        run: tox -e types

  precommit-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install tox
      - name: Run unit tests
        run: tox -e test-unit

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install tox
      - name: Run integration tests
        run: tox -e test-integration

  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    strategy:
      matrix:
        python: ["3.10"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: pip install tox
      - name: Build the package
        run: |
          export SPECULATORS_BUILD_TYPE=dev
          export SPECULATORS_BUILD_ITERATION=${{ github.event.pull_request.number }}
          tox -e build
      - name: Upload build artifacts
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/*
          compression-level: 6
          if-no-files-found: error
          retention-days: 30
      - name: Find comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Build Artifacts Available
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸ“¦ **Build Artifacts Available**
            The build artifacts (\`.whl\` and \`.tar.gz\`) have been successfully generated and are available for download: ${{ steps.artifact-upload.outputs.artifact-url }}.
            They will be retained for **up to 30 days**.
            Commit: ${{ github.event.pull_request.head.sha }}
          edit-mode: replace
